[1mdiff --git a/app/Models/User.php b/app/Models/User.php[m
[1mindex 4d7f70f..e8bb4c4 100644[m
[1m--- a/app/Models/User.php[m
[1m+++ b/app/Models/User.php[m
[36m@@ -18,7 +18,7 @@[m [mclass User extends Authenticatable[m
      * @var array<int, string>[m
      */[m
     protected $fillable = [[m
[31m-        'name',[m
[32m+[m[32m        'nickname',[m
         'email',[m
         'password',[m
     ];[m
[36m@@ -42,4 +42,14 @@[m [mclass User extends Authenticatable[m
         'email_verified_at' => 'datetime',[m
         'password' => 'hashed',[m
     ];[m
[32m+[m
[32m+[m[32m    public function profile()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->hasOne(UserProfile::class);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function categories()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->belongsToMany(Category::class, 'user_categories');[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/composer.json b/composer.json[m
[1mindex 8a3d72d..8534611 100644[m
[1m--- a/composer.json[m
[1m+++ b/composer.json[m
[36m@@ -9,7 +9,8 @@[m
         "guzzlehttp/guzzle": "^7.2",[m
         "laravel/framework": "^10.10",[m
         "laravel/sanctum": "^3.3",[m
[31m-        "laravel/tinker": "^2.8"[m
[32m+[m[32m        "laravel/tinker": "^2.8",[m
[32m+[m[32m        "pusher/pusher-php-server": "^7.2"[m
     },[m
     "require-dev": {[m
         "fakerphp/faker": "^1.9.1",[m
[1mdiff --git a/composer.lock b/composer.lock[m
[1mindex 7016be8..2162566 100644[m
[1m--- a/composer.lock[m
[1m+++ b/composer.lock[m
[36m@@ -4,7 +4,7 @@[m
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",[m
         "This file is @generated automatically"[m
     ],[m
[31m-    "content-hash": "9c491b8531eec05ba41a11d9276a5749",[m
[32m+[m[32m    "content-hash": "96396abc30ebc98484705537c99ded7a",[m
     "packages": [[m
         {[m
             "name": "brick/math",[m
[36m@@ -2390,6 +2390,97 @@[m
             ],[m
             "time": "2024-11-21T10:36:35+00:00"[m
         },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "paragonie/sodium_compat",[m
[32m+[m[32m            "version": "v2.1.0",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/paragonie/sodium_compat.git",[m
[32m+[m[32m                "reference": "a673d5f310477027cead2e2f2b6db5d8368157cb"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/paragonie/sodium_compat/zipball/a673d5f310477027cead2e2f2b6db5d8368157cb",[m
[32m+[m[32m                "reference": "a673d5f310477027cead2e2f2b6db5d8368157cb",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": "^8.1",[m
[32m+[m[32m                "php-64bit": "*"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpunit/phpunit": "^7|^8|^9",[m
[32m+[m[32m                "vimeo/psalm": "^4|^5"[m
[32m+[m[32m            },[m
[32m+[m[32m            "suggest": {[m
[32m+[m[32m                "ext-sodium": "Better performance, password hashing (Argon2i), secure memory management (memzero), and better security."[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "extra": {[m
[32m+[m[32m                "branch-alias": {[m
[32m+[m[32m                    "dev-master": "2.0.x-dev"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "files": [[m
[32m+[m[32m                    "autoload.php"[m
[32m+[m[32m                ][m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "ISC"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Paragon Initiative Enterprises",[m
[32m+[m[32m                    "email": "security@paragonie.com"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Frank Denis",[m
[32m+[m[32m                    "email": "jedisct1@pureftpd.org"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Pure PHP implementation of libsodium; uses the PHP extension if it exists",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "Authentication",[m
[32m+[m[32m                "BLAKE2b",[m
[32m+[m[32m                "ChaCha20",[m
[32m+[m[32m                "ChaCha20-Poly1305",[m
[32m+[m[32m                "Chapoly",[m
[32m+[m[32m                "Curve25519",[m
[32m+[m[32m                "Ed25519",[m
[32m+[m[32m                "EdDSA",[m
[32m+[m[32m                "Edwards-curve Digital Signature Algorithm",[m
[32m+[m[32m                "Elliptic Curve Diffie-Hellman",[m
[32m+[m[32m                "Poly1305",[m
[32m+[m[32m                "Pure-PHP cryptography",[m
[32m+[m[32m                "RFC 7748",[m
[32m+[m[32m                "RFC 8032",[m
[32m+[m[32m                "Salpoly",[m
[32m+[m[32m                "Salsa20",[m
[32m+[m[32m                "X25519",[m
[32m+[m[32m                "XChaCha20-Poly1305",[m
[32m+[m[32m                "XSalsa20-Poly1305",[m
[32m+[m[32m                "Xchacha20",[m
[32m+[m[32m                "Xsalsa20",[m
[32m+[m[32m                "aead",[m
[32m+[m[32m                "cryptography",[m
[32m+[m[32m                "ecdh",[m
[32m+[m[32m                "elliptic curve",[m
[32m+[m[32m                "elliptic curve cryptography",[m
[32m+[m[32m                "encryption",[m
[32m+[m[32m                "libsodium",[m
[32m+[m[32m                "php",[m
[32m+[m[32m                "public-key cryptography",[m
[32m+[m[32m                "secret-key cryptography",[m
[32m+[m[32m                "side-channel resistant"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "support": {[m
[32m+[m[32m                "issues": "https://github.com/paragonie/sodium_compat/issues",[m
[32m+[m[32m                "source": "https://github.com/paragonie/sodium_compat/tree/v2.1.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "time": "2024-09-04T12:51:01+00:00"[m
[32m+[m[32m        },[m
         {[m
             "name": "phpoption/phpoption",[m
             "version": "1.9.3",[m
[36m@@ -2956,6 +3047,67 @@[m
             },[m
             "time": "2024-12-10T01:58:33+00:00"[m
         },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "pusher/pusher-php-server",[m
[32m+[m[32m            "version": "7.2.7",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/pusher/pusher-http-php.git",[m
[32m+[m[32m                "reference": "148b0b5100d000ed57195acdf548a2b1b38ee3f7"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/pusher/pusher-http-php/zipball/148b0b5100d000ed57195acdf548a2b1b38ee3f7",[m
[32m+[m[32m                "reference": "148b0b5100d000ed57195acdf548a2b1b38ee3f7",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "ext-curl": "*",[m
[32m+[m[32m                "ext-json": "*",[m
[32m+[m[32m                "guzzlehttp/guzzle": "^7.2",[m
[32m+[m[32m                "paragonie/sodium_compat": "^1.6|^2.0",[m
[32m+[m[32m                "php": "^7.3|^8.0",[m
[32m+[m[32m                "psr/log": "^1.0|^2.0|^3.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "overtrue/phplint": "^2.3",[m
[32m+[m[32m                "phpunit/phpunit": "^9.3"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "extra": {[m
[32m+[m[32m                "branch-alias": {[m
[32m+[m[32m                    "dev-master": "5.0-dev"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Pusher\\": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Library for interacting with the Pusher REST API",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "events",[m
[32m+[m[32m                "messaging",[m
[32m+[m[32m                "php-pusher-server",[m
[32m+[m[32m                "publish",[m
[32m+[m[32m                "push",[m
[32m+[m[32m                "pusher",[m
[32m+[m[32m                "real time",[m
[32m+[m[32m                "real-time",[m
[32m+[m[32m                "realtime",[m
[32m+[m[32m                "rest",[m
[32m+[m[32m                "trigger"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "support": {[m
[32m+[m[32m                "issues": "https://github.com/pusher/pusher-http-php/issues",[m
[32m+[m[32m                "source": "https://github.com/pusher/pusher-http-php/tree/7.2.7"[m
[32m+[m[32m            },[m
[32m+[m[32m            "time": "2025-01-06T10:56:20+00:00"[m
[32m+[m[32m        },[m
         {[m
             "name": "ralouphie/getallheaders",[m
             "version": "3.0.3",[m
[1mdiff --git a/config/broadcasting.php b/config/broadcasting.php[m
[1mindex 2410485..1a15134 100644[m
[1m--- a/config/broadcasting.php[m
[1m+++ b/config/broadcasting.php[m
[36m@@ -37,14 +37,14 @@[m
             'app_id' => env('PUSHER_APP_ID'),[m
             'options' => [[m
                 'cluster' => env('PUSHER_APP_CLUSTER'),[m
[32m+[m[32m                'encrypted' => true,[m
                 'host' => env('PUSHER_HOST') ?: 'api-'.env('PUSHER_APP_CLUSTER', 'mt1').'.pusher.com',[m
                 'port' => env('PUSHER_PORT', 443),[m
                 'scheme' => env('PUSHER_SCHEME', 'https'),[m
[31m-                'encrypted' => true,[m
                 'useTLS' => env('PUSHER_SCHEME', 'https') === 'https',[m
             ],[m
             'client_options' => [[m
[31m-                // Guzzle client options: https://docs.guzzlephp.org/en/stable/request-options.html[m
[32m+[m[32m                'verify' => false,[m
             ],[m
         ],[m
 [m
[1mdiff --git a/database/migrations/2014_10_12_000000_create_users_table.php b/database/migrations/2014_10_12_000000_create_users_table.php[m
[1mindex 444fafb..161682a 100644[m
[1m--- a/database/migrations/2014_10_12_000000_create_users_table.php[m
[1m+++ b/database/migrations/2014_10_12_000000_create_users_table.php[m
[36m@@ -13,7 +13,7 @@[m [mpublic function up(): void[m
     {[m
         Schema::create('users', function (Blueprint $table) {[m
             $table->id();[m
[31m-            $table->string('name');[m
[32m+[m[32m            $table->string('nickname')->unique();[m
             $table->string('email')->unique();[m
             $table->timestamp('email_verified_at')->nullable();[m
             $table->string('password');[m
[1mdiff --git a/database/seeders/DatabaseSeeder.php b/database/seeders/DatabaseSeeder.php[m
[1mindex a9f4519..9fc3ca9 100644[m
[1m--- a/database/seeders/DatabaseSeeder.php[m
[1m+++ b/database/seeders/DatabaseSeeder.php[m
[36m@@ -18,5 +18,9 @@[m [mpublic function run(): void[m
         //     'name' => 'Test User',[m
         //     'email' => 'test@example.com',[m
         // ]);[m
[32m+[m
[32m+[m[32m        $this->call([[m
[32m+[m[32m            CategorySeeder::class,[m
[32m+[m[32m        ]);[m
     }[m
 }[m
[1mdiff --git a/routes/api.php b/routes/api.php[m
[1mindex 889937e..b491a23 100644[m
[1m--- a/routes/api.php[m
[1m+++ b/routes/api.php[m
[36m@@ -2,6 +2,10 @@[m
 [m
 use Illuminate\Http\Request;[m
 use Illuminate\Support\Facades\Route;[m
[32m+[m[32muse App\Http\Controllers\AuthController;[m
[32m+[m[32muse App\Http\Controllers\ProfileController;[m
[32m+[m[32muse App\Http\Controllers\MatchController;[m
[32m+[m[32muse App\Http\Controllers\WebRTCController;[m
 [m
 /*[m
 |--------------------------------------------------------------------------[m
[36m@@ -17,3 +21,27 @@[m
 Route::middleware('auth:sanctum')->get('/user', function (Request $request) {[m
     return $request->user();[m
 });[m
[32m+[m
[32m+[m[32m// Public routes[m
[32m+[m[32mRoute::post('/register', [AuthController::class, 'register']);[m
[32m+[m[32mRoute::post('/login', [AuthController::class, 'login']);[m
[32m+[m
[32m+[m[32m// Protected routes[m
[32m+[m[32mRoute::middleware('auth:sanctum')->group(function () {[m
[32m+[m[32m    Route::post('/logout', [AuthController::class, 'logout']);[m
[32m+[m
[32m+[m[32m    // Profile routes[m
[32m+[m[32m    Route::get('/profile', [ProfileController::class, 'show']);[m
[32m+[m[32m    Route::post('/profile/avatar', [ProfileController::class, 'updateAvatar']);[m
[32m+[m[32m    Route::post('/profile/{profile}/like', [ProfileController::class, 'addLike']);[m
[32m+[m[32m    Route::post('/profile/experience', [ProfileController::class, 'addExperiencePoint']);[m
[32m+[m
[32m+[m[32m    // Match routes[m
[32m+[m[32m    Route::get('/categories', [MatchController::class, 'getCategories']);[m
[32m+[m[32m    Route::post('/categories', [MatchController::class, 'updateUserCategories']);[m
[32m+[m[32m    Route::post('/match/find', [MatchController::class, 'findMatch']);[m
[32m+[m[32m    Route::post('/match/cancel', [MatchController::class, 'cancelMatch']);[m
[32m+[m
[32m+[m[32m    // WebRTC routes[m
[32m+[m[32m    Route::post('/webrtc/signal', [WebRTCController::class, 'signal']);[m
[32m+[m[32m});[m
